/**
 * 百度统计（当前百度统计默认不开启默认推送PV，需要主动调用）
 *   相关示例：（具体函数调用详情，请查看函数备注说明）
 *     1、推送PV示例：
 *         czc.pushPV();
 *     2、推送点击事件示例：
 *         czc.pushEvent("点击游戏规则");
 *         czc.pushEvent("开始挑战", {carId: 123});
 *
 *   注意：
 *       正式生产环境使用的运营提供的正式账号代码（账号我不告诉你），其它环境（包括线上预发布）都用的测试账号代码（dongxiaochai@126.com a111111）
 *
 * @author dongxiaochai@163.com
 * @since 2017-04-26
 */

var _czc = _czc || [];
_czc.push(﻿["_setAutoPageview",false]);
define(["webViewBridge", "util"], function(){
    var isProductEv = location.host.indexOf('cheok.com') > -1,//是否线上环境
        isPreRelease = location.host.indexOf('beitaijf.cn') > -1,//是否预发布环境
        //1261993699    线上id
        //1261988701    测试id
        statJsUrl = '//s11.cnzz.com/z_stat.php?id=' + ((isProductEv || isPreRelease) ? "1262973348" : "1261988701"),
        statCategory = "王者荣耀活动"

    //百度统计代码
    var czc = {
        pushCollecter: [],
        /**
         * 是否已经得到appInfo
         * @type {Boolean}
         */
        _getAppInfoYet: false,

        _waitAttachFnList: [],
        /**
         * 获取终端信息
         * @return {[type]} [description]
         */
        _getAttachInfo: function(){
            var _this = this,
                defer = $.Deferred();

            defer.resolve({});
            return defer.promise();



            if(_this._getAppInfoYet){
                callback();
            } else{
                if(!_this._waitAttachFnList.length){
                    wv.getAppInfo(function(){
                        for(var i = 0; i < _this._waitAttachFnList.length; i++){
                            _this._waitAttachFnList[i]();
                        }
                    });
                }
                _this._waitAttachFnList.push(callback);
            }

            function callback(){
                var UA = navigator.userAgent,
                    isIOS = !!UA.match(/iPhone|iPod|iPad/i),
                    isAndroid = !!UA.match(/Android/i),
                    isWindows = !!UA.match(/Windows Phone/i),
                    isWXBrowser = !!UA.match(/micromessenger/i),
                    isQQBrowser = !!UA.match(/qq/i),
                    params = {
                        scheme: wv.appInfo.scheme,//应用scheme
                        agents: _getAgent() //终端类型，PC，安卓、ios
                    };

                //非应用内的
                if(isWXBrowser){
                    params.scheme = "micromessenger";
                } else if(isQQBrowser){
                    params.scheme = "qq";
                } else if(!params.scheme){
                    params.scheme = "other";
                }

                defer.resolve(params);

                _this._getAppInfoYet = true;
            }

            function _getAgent() {
                var userAgentInfo = navigator.userAgent.toLowerCase();
                var agents = ["Android", "iPhone",
                            "SymbianOS", "Windows Phone",
                            "iPad", "iPod"];
                var flag = "PC";
                for (var i = 0; i < agents.length; i++) {
                    if (userAgentInfo.indexOf(agents[i].toLowerCase()) > -1) {
                        flag = agents[i];
                        break;
                    }
                }
                return flag;
            }

            return defer.promise();
        },
        /**
         * 发送统计
         * @param  {Array} pushParams  统计参数
         * @return {void}           
         */
        _emitPush: function(pushParams){
            if(window._czc){
                // console.log(pushParams);
                _czc.push(pushParams);
            } else{
                this.pushCollecter.push(pushParams);
            }
        },
        /**
         * 推送PV统计
         * @param  {String} content_url Path相对地址，如果不传，取当前url的path部分
         * @param  {String} referer_url 需要填写带有域名的完整URL地址，若不填，则虚拟PV的来路会按它母页面的来路进行统计，如果填写成空，则来路按“直接输入网址或书签”进行统计
         */
        pushPV: function(content_url, referer_url){
            var _this = this,
                pathUrl = content_url || location.href.replace(location.origin, ''),
                referer_url = referer_url || document.referrer,
                pushParams;

            _this._getAttachInfo().then(function(data){
                var paramsStr = $.param(data);
                if(paramsStr){
                    if(pathUrl.indexOf("?") == -1){
                        pathUrl += "?";
                    } else{
                        pathUrl += "&";
                    }
                    pathUrl += paramsStr;
                }

                pushParams = ['_trackPageview', pathUrl, referer_url];
                _this._emitPush(pushParams);
            });
        },
        /**
         * 推送点击埋点
         * @param  {String} action      必选 String  用户跟网页进行交互的动作名称      不填、填"-"的事件会被抛弃
         * @param  {Object} label   可选 事件的一些额外信息 请传json
         * @param  {String} value   可选   Number  跟事件相关的数值
         * @return {void}
         */
        pushEvent: function(config){
            var _this = this,
                params = {
                    category: config.category || "",//必填   String  表示事件发生在谁身上，如“视频”、“小说”、“轮显层”等等。
                    action: config.action,//必选 String  表示访客跟元素交互的行为动作，如"播放"、"收藏"、"翻层"等等。
                    label: config.label || "",//可选  String  用于更详细的描述事件，如具体是哪个视频，哪部小说。
                    value: config.value || "",//可选 int  用于填写打分型事件的分值，加载时间型事件的时长，订单型事件的价格。
                    nodeid: config.nodeid || ""  //选填    string  填写事件元素的div元素id。 请填写class id，暂不支持name。
                },
                pushParams;

            _this._getAttachInfo().then(function(data){
                if(typeof params.label == 'object'){
                    params.label = $.extend({}, data, params.label);
                    
                    params.label = Util.stringify(params.label);
                }

                if(params.label == '{}'){
                    params.label = '';
                }

                pushParams = ['_trackEvent', params.category, params.action, params.label, params.value, params.nodeid];
                
                _this._emitPush(pushParams);
            });
        }
    };

    //引入统计脚本
    (function() {
        var statScript = document.createElement("script");
        statScript.src = statJsUrl;

        var s = document.getElementsByTagName("script")[0];
        statScript.onload = statScript.onreadystatechange = function() {
            if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete" ) {
                statScript.onload = statScript.onreadystatechange = null;

                if(czc.pushCollecter.length){
                    for(var i = 0; i < czc.pushCollecter.length; i++){
                        // console.log(czc.pushCollecter[i]);
                        _czc.push(czc.pushCollecter[i]);
                    }
                    czc.pushCollecter = [];
                }
            }
        };

        s.parentNode.insertBefore(statScript, s);
    })();
    
    // //测试
    // czc.pushPV();
    // czc.pushEvent("开始挑战a1");
    // czc.pushEvent("开始挑战a2", {carId: 123, name: "小黄豆"});
    // czc.pushEvent("开始挑战a3", {carId: 123}, 456);
// czc.pushPV('/index?app=btjf2');
    window.czc = czc;
    return czc;
});