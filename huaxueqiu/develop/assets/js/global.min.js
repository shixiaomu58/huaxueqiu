/**
 * 页面事件处理程序绑定
 * @return {[type]} [description]
 */
// alert("test:");
function pageHandle() {
    var startX = 0,
        startY = 0,
        isMove = false,
        startTime;

    $(document)
        .on("touchstart", "[tap-handler]", function(e) {
            startTime = new Date().getTime();
            isMove = false;
            var oMove = fnGetTouchPosition(e);
            startX = oMove.x;
            startY = oMove.y;
        })
        .on("touchmove", "[tap-handler]", function(e) {
            // console.log("move");
            // isMove = true;
            var oMove = fnGetTouchPosition(e),
                nDistance = 10;
            // alert(Math.abs(oMove.x - startX));
            if (Math.abs(oMove.x - startX) > nDistance || Math.abs(oMove.y - startY) > nDistance) {
                isMove = true;
            }
            // console.log(2343243);
        })
        .on("touchend", "[tap-handler]", function(e) {
            var endTime = new Date().getTime();
            if (!isMove && endTime - startTime < 200) {
                var fnHandle = $(this).attr("tap-handler");
                eval(fnHandle);
            }
        });
}

/*
 * 获取移动坐标信息
 */
function fnGetTouchPosition(e) {
    var touches = e.changedTouches || e.originalEvent.changedTouches,
        oMove = {
            x: e.pageX,
            y: e.pageY
        };
    if (e.type.indexOf("touch") > -1) {
        oMove.x = touches[touches.length - 1].pageX;
        oMove.y = touches[touches.length - 1].pageY;
    }

    return oMove;
}

if (window.define) { //加个判断兼容
    define(["jquery",
        "angular", "util", "globalBase",
        "say", "loading", "confirm", "webViewBridge", "serviceModule", "directiveModule"
    ], function($, angular, Util, confirm) {
        window.PAGE_PREFIX = location.href.substr(0, location.href.lastIndexOf('/'));
        // pageHandle();//绑定页面处理程序
        var global = angular.module('global', ['serviceModule', 'btBaseModule'], ["$httpProvider", function($httpProvider) {
            // $httpProvider.defaults.headers.common["content-type"] = 'application/json; charset=UTF-8';
        }]);

        //根controller
        global.controller('GController', ["$rootScope", "$scope", "$filter", "$timeout",
            function($rootScope, $scope, $filter, $timeout) {

                /**
                 * 设置fontSize
                 */
                function setSize() {
                    var docEl = document.documentElement,
                        fontEl = document.createElement('style'),
                        nWinWidth = docEl.clientWidth,
                        STATIC_WIDTH = 375,
                        ratioWidth = nWinWidth / STATIC_WIDTH;
                    // 动态写入样式
                    docEl.firstElementChild.appendChild(fontEl);
                    fontEl.innerHTML = 'html{font-size:' + (ratioWidth * 16) + 'px!important;}';
                }

                var mql = window.matchMedia('(orientation: portrait)');
                var orientationTip = null; //提示窗口

                function handleOrientationChange(mql) {
                    $timeout(function(){
                        if (mql.matches) {
                            // 竖屏
                            orientationTip && orientationTip.destroy();
                            orientationTip = null;
                        } else {
                            // 横屏
                            orientationTip = new Confirm("查看活动内容，请切换为竖屏")
                        }
                    }, 100)
                }
                // 监听屏幕模式的变化
                mql.addListener(handleOrientationChange);

                var timer = null;

                $timeout(function() {
                    setSize();
                    handleOrientationChange(mql)
                })

                $(window).on("resize", function() {
                    clearTimeout(timer);
                    timer = $timeout(function() {
                        setSize()
                    }, 100)
                });
                $("#pbody").removeClass("ks-hide"); //显示内容
                var shareCode = Util.getParam("shareCode") || Util.getParam("sharecode");

                $scope.wv = wv;
                $scope.Util = Util;
                //读取app环境变量
                wv.getAppInfo(function() {

                });

                $scope.isAndroid = new RegExp(/Android/ig).test(navigator.userAgent);
                $scope.isIOS = new RegExp(/iPhone/ig).test(navigator.userAgent);

                /**
                 * 打开web页面
                 *
                 * @param  {String} url 跳转的地址
                 * @param  {Integer} type 跳转类型，1先关闭后打开，0直接打开，默认不传为直接打开
                 * @param  {String} title 打开的页面的title，可不传
                 * @return {void}
                 */
                $scope.openWebPage = function(url, type, title, jsOnResume) {
                    var obj = {};
                    if (typeof(url) === "object") {
                        obj = url;
                    } else {
                        obj.url = url || "";
                        obj.type = type || 0;
                        obj.title = title || "";
                        obj.jsOnResume = jsOnResume || null; //针对登录加的，返回执行的脚本字符串
                    }

                    wv.openWebPage(obj);
                }


                //设置页面title
                $scope.setPageTitle = function(title) {
                    var isWeChat = navigator.userAgent.toLowerCase().indexOf("micromessenger") > -1; //是否微信浏览器

                    $scope.pageTitle = title;

                    if (GConfig.isInApp) { //app内
                        wv.setTitle($scope.pageTitle);
                    } else if (isWeChat) { //微信浏览器
                        $timeout(function() {
                            var jTitleIframe = $(".ifTitle");
                            if (!jTitleIframe.length) {
                                jTitleIframe = $('<iframe class="ifTitle"></iframe>')
                                    .hide()
                                    .attr("src", "./favicon.ico")
                                    .appendTo($('body'));
                            }

                            jTitleIframe.on('load', function() {
                                $timeout(function() {
                                    jTitleIframe.off("load").remove();
                                }, 0);
                            });
                        }, 100);
                    }
                };


                // 打开跳转页面
                $scope.skipPage = function(relativeUrl) {
                    var sUrl = location.href.substr(0, location.href.lastIndexOf('/') + 1) + relativeUrl;
                    wv.openWebPage(sUrl, 1)
                }
            }
        ]);

        global.filter('trustHtml', ["$sce", function($sce) {
            return function(text) {
                return $sce.trustAsHtml(text);
            }
        }]);

        return global;
    });
}

/**
 * 打开app 参考实现方式：http://www.cnblogs.com/shadajin/p/5724117.html
 * @param  {String} sPath app对应的schame url
 * @param  {String} wapUrl 启动类型
 * @return {void}
 */
function openApp(sPath, wapUrl){
    // if(!sPath){
    //  return;
    // }
    //判断当前的环境
    var UA = navigator.userAgent,
        oParam = {
            isIOS : !!UA.match(/iPhone|iPod|iPad/i),
            isAndroid : !!UA.match(/Android/i),
            isWindows : !!UA.match(/Windows Phone/i),
            isWXBrowser : !!UA.match(/micromessenger/i),
            isQQBrowser : !!UA.match(/qq/i)
        },
        oDefaults = {//itms-apps
            btjf: {
                iosDownUrl: "https://itunes.apple.com/cn/app/bei-tai-hao-che-er-shou-che/id1066750890?mt=08",            //一般为app store地址
                androidDownUrl:"https://cdnapp.cheok.com/b2c/cdndownload.html", //直接下载地址或者页面都是可以的
                wxDownUrl: "http://a.app.qq.com/o/simple.jsp?pkgname=com.aika.dealer"   //微信应用宝地址
            },
            btcust: {
                iosDownUrl: "https://itunes.apple.com/cn/app/bei-tai-hao-che-er-shou-che/id1219866503?mt=08",            //一般为app store地址
                androidDownUrl:"https://cdnapp.cheok.com/b2c/cdndownload.html", //直接下载地址或者页面都是可以的
                wxDownUrl: "http://a.app.qq.com/o/simple.jsp?pkgname=com.btjf.app.cheok"   //微信应用宝地址
            },
            akstaff: {
                iosDownUrl: "https://cdnapp.cheok.com/staff/cdndownload.html",            //一般为app store地址
                androidDownUrl:"https://cdnapp.cheok.com/staff/cdndownload.html", //直接下载地址或者页面都是可以的
                wxDownUrl: "https://cdnapp.cheok.com/staff/cdndownload.html"   //微信应用宝地址
            }
        },
        aScheme = ["btjf","akstaff","btcust"], //现有的scheme集合
        sScheme, //传来的sPath如果有scheme，将会存在这里
        sHost,
        defaultScheme,
        defaultHost
        ;

    //取得deafult scheme和host
    function getDefaultSchemePrefix(defaultPath){
        defaultScheme = defaultPath.split("://")[0];
        defaultHost = defaultPath.split("://")[1];
    }
    getDefaultSchemePrefix(GConfig.APP_PAGE_PREFIX);

    //取得scheme 和 host
    function getSchemePrefix(path) {
        if(path.indexOf("://") !== -1){
            sScheme = path.split("://")[0];
            sHost = path.split("://")[1];
            return;
        }
        for(var i=0, len=aScheme.length; i<len; i++){
            if(path.split("/")[1] == aScheme[i]){
                sScheme = aScheme[i];
                sPath = sPath.slice(sPath.split("/")[1].length+1);
                break;
            }
        }
    }

    sPath && getSchemePrefix(sPath);

    sScheme = sScheme || defaultScheme;
    sHost = sHost || defaultHost;

    if(!sPath){
        sPath = sScheme + "://" + sHost + "/index";
    }else{
        if(sPath.indexOf(sScheme+"://") === -1 && sPath.indexOf(sHost) === -1){
            if(sPath.indexOf("/") !== 0){
                sPath = "/" + sPath;
            }
            sPath = sScheme + "://" + sHost + sPath;
        }
    }

    //已经是在app内(二维码扫描)
    if(window.wv){
        wv.getIsInApp().then(function(){
            //已经安装，但不是一个app内的话还是d
            if(wv.appInfo.scheme && sPath.indexOf(wv.appInfo.scheme + ":") == -1){
                goToPage();
            } else{
                if((wv.appInfo.scheme == "btjf" && wv.appInfo.appVersion >= "3.1.0") ||
                    (wv.appInfo.scheme == "btcust" && wv.appInfo.appVersion >= "1.3.0")){
                    _open();
                } else{//老版本，加上300毫秒延时
                    setTimeout(_open, 300);
                }

                function _open(){
                    wv.openPage({
                        url: sPath,
                        type: 1,
                        scheme: sScheme + "://www.btjf.com"
                    });
                }
            }
        }, function(){
            goToPage();
        });
    } else{
        goToPage();
    }

    // sPath = "btjf://www.btjf.com/business/cousult";
    // sPath = "btjf://www.btjf.com/service/carValuation";
    // sPath = "weixin://";
    // sPath = "taobao://";
    function goToPage(){
        var downloadUrl = wapUrl || (oParam.isWXBrowser ? oDefaults[sScheme].wxDownUrl : ""),
            jIframe,
            clickAt = new Date().getTime(),    // 点击那一刻时间
            nMilSec = 1100,
            isOpen = false//app是否已经打开，针对安卓
            ;

        if (oParam.isAndroid) {
            downloadUrl = downloadUrl || oDefaults[sScheme].androidDownUrl;

            jIframe = $('<iframe class="ifOpenApp"></iframe>')
                .hide()
                .attr("src", sPath)
                .appendTo($('body'))
            ;

            // //检查app是否打开
            // function checkOpen(callback){
            //     var _clickTime = +(new Date());
            //     function check(elsTime) {
            //         if ( elsTime > 3000 || document.hidden || document.webkitHidden) {//hidden表示页面是否为用户当前观看的页面
            //             callback(true);
            //         } else {
            //             callback(false);
            //         }
            //     }
            //     //启动间隔20ms运行的定时器，并检测累计消耗时间是否超过3000ms，超过则结束
            //     var _count = 0, intHandle;
            //     intHandle = setInterval(function(){
            //         _count++;
            //         var elsTime = +(new Date()) - _clickTime;
            //         if (_count>=100 || elsTime > 3000 ) {
            //             clearInterval(intHandle);
            //             check(elsTime);
            //         }
            //     }, 20);
            // }

            // checkOpen();
        } else {//ios9以上，用iframe无法实现跳转，所以只能当前页重定向
            downloadUrl = downloadUrl || oDefaults[sScheme].iosDownUrl;

            window.location = sPath;
        }

        var timer = setTimeout(function() {
            //有的浏览器唤起app的话会终止浏览器进程，所以超过这个时间表示已经切换到别的浏览器了
            //(经测试大部分第三方浏览器都不会终止进程)
            if (new Date().getTime() - clickAt < nMilSec + 500 && isOpen == false) {
                window.location = downloadUrl;
            }

            removeIframe();
        }, nMilSec);

        window.onblur = function() {
            clearTimeout(timer);
            removeIframe();
        }

        //移除iframe
        function removeIframe(){
            if(jIframe){
                jIframe.remove();
                jIframe = null;
            }
        }
    }
}